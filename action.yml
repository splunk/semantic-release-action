name: "Semantic release"
description: "This tool performs semantic release or returns value of next release version"

inputs:
  dry_run:
    description: "dry run - if only version should be returned without releasing new version"
    default: false
    required: false
  extra_plugins:
    description: "extra plugins - if plugins beside semantic-release/changelog, semantic-release/git, semantic-release/exec are to be installed"

outputs:
  new_release_version:
    description: "Version of the new release"
    value: ${{ steps.semantic.outputs.version }}
  new_release_published:
    description: "Whether a new release was published"
    value: ${{ steps.semantic.outputs.new_release_published }}

runs:
  using: "composite"
  steps:
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: "18"
    - name: Prepare Semantic Release
      run: |
        install_command="npm install --no-package-lock --save false -D @semantic-release/changelog @semantic-release/git"
        while IFS= read -r line
        do
          if [ ! -z "$line" ];then
            install_command="$install_command $(echo -e "$line" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
          fi
        done <<< "${{ inputs.extra_plugins }}"
        $install_command
      shell: bash
    - id: semantic
      run: |      
        if [[ ${{ inputs.dry_run }} == true ]]; 
          echo "Running dry-run Semantic Release"
          then npx semantic-release@20 --dry-run
        else 
          echo "Running Semantic Release"
          npx semantic-release@20
        fi
      shell: bash
